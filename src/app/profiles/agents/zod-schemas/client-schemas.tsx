import { z } from 'zod';

export const agentFormSchema = z.object({
  id: z.string().uuid(),
  first_name: z.string().min(1, 'El nombre es obligatorio'),
  certifications: z.array(z.string()).optional(),
  last_name: z.string().min(1, 'El apellido es obligatorio'),
  email: z.string().email('Correo electrónico inválido'),
  description_long: z.string().optional(),
  description_short: z.string().optional(),
  password: z.string().min(6, 'La contraseña debe tener al menos 6 caracteres'),
  position: z.string().optional(),
  business_name: z.string().optional(),
  slogan: z.string().optional(),
  work_hours: z.array(z.string()).optional(),
  start_year: z.string().optional(),
  category: z.string().optional(),
  phone: z.string().min(1, 'El teléfono es obligatorio'),
  address_line_one: z.string().min(1, 'La dirección es obligatoria'),
  city: z.string().min(1, 'La ciudad es obligatoria'),
  state: z.string().min(1, 'El estado es obligatorio'),
  zip: z.string().min(1, 'El código postal es obligatorio'),
  country: z.string().min(1, 'El país es obligatorio'),
  website_url: z.string().optional(),
  facebook: z.string().optional(),
  linkedin: z.string().optional(),
  youtube: z.string().optional(),
  instagram: z.string().optional(),
  google_profile_url: z.string().optional(),
  payment_methods: z.array(z.string()).optional(),
  service_name: z.string().optional(),
  specialties: z.array(z.string()).optional(),
  clientId: z.string().nonempty('El cliente es requerido'),
  service_area: z.array(z.string()).optional(),
});

export type AgentFormSchema = z.infer<typeof agentFormSchema>;
